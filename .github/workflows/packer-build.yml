name: Packer AMI Build and Share

on:
  push:
    branches:
      - main  

jobs:
  build-and-share-ami:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install MySQL Client
      run: sudo apt-get install mysql-client -y

    - name: Setup MySQL Database
      run: |
        mysql -h 127.0.0.1 -u root -prootpass -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_NAME }};"
        mysql -h 127.0.0.1 -u root -prootpass -e "CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
        mysql -h 127.0.0.1 -u root -prootpass -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB_NAME }}.* TO '${{ secrets.DB_USER }}'@'localhost';"
        mysql -h 127.0.0.1 -u root -prootpass -e "FLUSH PRIVILEGES;"

    - name: Install Node.js dependencies
      run: npm install

    - name: Create .env file
      run: |
        echo "PORT=3000" > .env
        echo "DATABASE_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DATABASE_USER=${{ secrets.DB_USER }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DATABASE_HOST=localhost" >> .env
        echo "DATABASE_DIALECT=mysql" >> .env
        echo "NODE_ENV=test" >> .env

    - name: Run Tests
      run: npm test

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEV_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Packer
      uses: hashicorp/setup-packer@v1
      with:
        packer-version: '1.7.4'

    - name: Initialize Packer
      run: packer init ./packer/templates

    - name: Build AMI using Packer
      run: |
        packer build -machine-readable ./packer/templates/node_app.pkr.hcl | tee build_output.txt
      env:
        PACKER_LOG: 1

    - name: Extract AMI ID
      id: extract_ami
      run: |
        AMI_ID=$(grep 'artifact,0,id' build_output.txt | cut -d, -f6 | cut -d: -f2)
        echo "::set-output name=ami_id::$AMI_ID"

    - name: Share AMI with DEMO Account
      run: |
        aws ec2 modify-image-attribute --image-id ${{ steps.extract_ami.outputs.ami_id }} --launch-permission "Add=[{UserId=DEMO_ACCOUNT_ID}]"
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
